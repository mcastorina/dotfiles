" Copy / Paste
noremap <C-c> <C-v><C-c>
noremap <C-v> <C-v><C-v>

" Select all
inoremap <C-a> <C-Home><C-S-End>

" Forward / Back
noremap <C-l> L
noremap <C-h> H
inoremap <C-l> <Esc>L
inoremap <C-h> <Esc>H

" Tab moving
noremap <C-j> gt
noremap <C-k> gT
noremap <C-S-j> :tabm +1<CR>
noremap <C-S-k> :tabm -1<CR>
inoremap <C-j> <Esc>gt
inoremap <C-k> <Esc>gT
inoremap <C-S-j> <Esc>:tabm +1<CR>
inoremap <C-S-k> <Esc>:tabm -1<CR>

" Group moving
noremap H <Esc>:tabgroups switch -1<CR>
noremap L <Esc>:tabgroups switch +1<CR>

" Move cursor in insert (or command) mode
inoremap <C-h> <Left>
cnoremap <C-h> <Left>
inoremap <C-l> <Right>
cnoremap <C-l> <Right>

inoremap <C-b> <C-Left>
cnoremap <C-b> <C-Left>
inoremap <C-f> <C-Right>
cnoremap <C-f> <C-Right>

" External editor
set editor="urxvt -e vim"

" Hide status bar when fullscreen mode is detected
autocmd Fullscreen .* js updateBottomBar()

" Re-enable bottom bar during certain commands.
noremap : :js updateBottomBar(false)<CR>:
noremap o :js updateBottomBar(false)<CR>o
noremap O :js updateBottomBar(false)<CR>O
noremap t :js updateBottomBar(false)<CR>t
noremap T :js updateBottomBar(false)<CR>t
noremap / :js updateBottomBar(false)<CR>/
cnoremap <CR> <CR>:js updateBottomBar()<CR>
cnoremap <Esc> <Esc>:js updateBottomBar()<CR>

:js << EOF

let hlContentSepValue = highlight.get('ContentSeparator').value

function updateBottomBar(close = window.fullScreen) {
  let bb = document.getElementById('liberator-bottombar')
  if (! bb) return

  if (close) {
    bb.style.height = '0px'
    bb.style.overflow = 'hidden'
    liberator.execute('highlight ContentSeparator display: none;')
  }
  else {
    bb.style.height = ''
    bb.style.overflow = ''
    liberator.execute('highlight ContentSeparator ' + hlContentSepValue)
  }
}
updateBottomBar()

EOF
